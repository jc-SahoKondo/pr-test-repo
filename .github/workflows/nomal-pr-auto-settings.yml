# PR本文に紐づいたIssueをもとにPRを設定

name: PR Auto Label, Milestone, and Assignee

on:
  pull_request:
    types: [opened, edited]

jobs:
  process-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set labels, milestones, and assignees
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          const prBody = pr.body;
          const prNumber = pr.number;
          const creator = pr.user.login;
          const targetBranch = pr.base.ref; 

          if (!prBody) {
            console.log("PR body is empty.");
            return;
          }

          // 正規表現で "Fixed: #" に続くIssue番号を抽出
          const issueMatch = prBody.match(/Fixed: #(\d+)/);
          if (!issueMatch) {
            console.log("No issue found in PR body.");
            return;
          }

          const issueNumber = issueMatch[1];

          // 取得したIssueのラベルとマイルストーンをPRに設定
          let issueData;
          try {
            issueData = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
            });
          } catch (error) {
            console.error(`Failed to fetch issue #${issueNumber}:`, error);
            return;
          }

          const labelsToAdd = issueData.data.labels.map(label => label.name);
          const milestoneToAdd = issueData.data.milestone ? issueData.data.milestone.number : null;


          // PRにIssueと同じラベルとマイルストーンを追加
          if (labelsToAdd.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: labelsToAdd,
            });
          }

          if (milestoneToAdd) {
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              milestone: milestoneToAdd,
            });
          }


          // PRのAssigneesに作成者を追加
          await github.rest.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            assignees: [creator],
          });

          // 取得したIssueにPR作成者をAssigneesとして追加
          await github.rest.issues.addAssignees({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            assignees: [creator],
          });


          // PRとIssueに "ready to review" ラベルを追加
          const readyToReviewLabel = "ready to review";

          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            labels: [readyToReviewLabel],
          });

          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            labels: [readyToReviewLabel],
          });
          
